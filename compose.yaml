services:
  backend:
    image: elisabethein/flight-application:backend-latest
    container_name: flight_backend
    env_file:
      - .env
    ports:
      - '8080:8080'
    networks:
        - flight_network
    depends_on:
        db:
            condition: service_healthy

  frontend:
    image: elisabethein/flight-application:frontend-latest
    container_name: flight_frontend
    ports:
      - "80:80"
    networks:
        - flight_network

  db:
    image: postgres:latest
    container_name: flight_db
    restart: always
    environment:
      POSTGRES_DB: flightApp
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '5432:5432'
    networks:
      - flight_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 10s
      retries: 5
      start_period: 10s

networks:
    flight_network:
        driver: bridge

